apply plugin: 'jacoco'

jacoco {
    toolVersion "0.8.5"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

project.afterEvaluate {
    android.libraryVariants.all { variant ->
        def variantName = variant.name
        def testTaskName = "test${variantName.capitalize()}UnitTest"
        tasks.create(name: "${testTaskName}Coverage", type: JacocoReport, dependsOn: "$testTaskName") {
            group = "Reporting"
            description = "Generate Jacoco coverage reports for the ${variantName.capitalize()} build."
            reports {
                html.enabled = true
                xml.enabled = true
            }
            def excludes = [
                    '**/R.class',
                    '**/*$*',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*Test*.*',
                    'android/**/*.*',
                    'androidx/**/*.*',
                    '**/constant/*',
                    '**/constants/*',
                    '**/adapter/*',
                    '**/Constants.*',
                    'com/anibalbastias/weatherlib/databinding/**',
                    'com/anibalbastias/weatherlib/DataBinderMapperImpl.*',
                    'com/anibalbastias/weatherlib/FeatureKodeinModule.*',
                    'com/anibalbastias/weatherlib/DataBindingInfo.*',
                    'com/anibalbastias/weatherlib/DataBinderMapperImpl.InnerBrLookup.*',
                    'com/anibalbastias/weatherlib/DataBinderMapperImpl.InnerLayoutIdLookup.*',
                    'com/anibalbastias/weatherlib/BR.*',
                    'com/anibalbastias/weatherlib/data/ProductsDataModuleKt.*',
                    'com/anibalbastias/weatherlib/domain/ProductsDomainModuleKt.*',
                    'com/anibalbastias/weatherlib/presentation/ProductsPresentationModuleKt.*',
                    'com/anibalbastias/weatherlib/ui/ProductsUiModuleKt.*',
                    'com/anibalbastias/weatherlib/generated/***',
                    'com/anibalbastias/weatherlib/ui/**',
                    '**/di/*'
            ]
            def javaClasses = fileTree(dir: variant.javaCompiler.destinationDir, excludes: excludes)
            def kotlinClasses = fileTree(dir: "${buildDir}/tmp/kotlin-classes/${variantName}", excludes: excludes)
            classDirectories = files([javaClasses, kotlinClasses])
            sourceDirectories = files([
                    "$project.projectDir/src/main/java",
                    "$project.projectDir/src/${variantName}/java",
                    "$project.projectDir/src/main/kotlin",
                    "$project.projectDir/src/${variantName}/kotlin"
            ])
            executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")
        }
    }
}
